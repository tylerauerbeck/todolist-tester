name: PR check

on:
  pull_request:

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  security-scan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [8.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install, build, and test
      run: |
        npm install
        npm run build:ci
      env:
        CI: true
    - uses: vrutkovs/action-s2i@master
      with:
        path: "./package-contents"
        base: registry.access.redhat.com/ubi8/nodejs-10:latest
        image: todolist-tester:latest
    - uses: anchore/scan-action@master
      with:
        image-reference: "todolist-tester:latest"
        fail-build: false
        include-app-packages: true
      id: vuln_scan
    - run: |
        cat ${{ steps.vuln_scan.outputs.vulnerabilities }}
        echo "hello"
        cat ${{ steps.vuln_scan.outputs.billofmaterials }}
      name: output_check
    - run: |
        numVuln=$(jq --raw-output '.vulnerabilities | length' ${{steps.vuln_scan.outputs.vulnerabilities}})
        highVuln=$(jq 'reduce .vulnerabilities[] as $s(0; if $s.severity == \"High\" then .+1 else . end)' ${{steps.vuln_scan.outputs.vulnerabilities}})
        medVuln=$(jq 'reduce .vulnerabilities[] as $s(0; if $s.severity == \"Medium\" then .+1 else . end)' ${{steps.vuln_scan.outputs.vulnerabilities}})
        lowVuln=$(jq 'reduce .vulnerabilities[] as $s(0; if $s.severity == \"Low\" then .+1 else . end)' ${{steps.vuln_scan.outputs.vulnerabilities}})
        highPkg=$(jq --raw-output '.vulnerabilities[] | select(.severity == \"High\") | .package + .vuln' ${{steps.vuln_scan.outputs.vulnerabilities}})
        echo "::set-output name=numVuln::$numVuln"
        echo "::set-output name=highPkg::$highPkg"
      id: vuln_out
    - run: |
        echo ${{steps.vuln_out.outputs.numVuln}}
        echo ${{steps.vuln_out.outputs.highPkg}}

  pr_info:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        echo $GITHUB_REF
        echo "hello"
        echo $GITHUB_EVENT_PATH
        echo "hello"
        export
        echo "hello"
        cat $GITHUB_EVENT_PATH
        
