{
  "name": "todolist",
  "version": "1.0.0",
  "main": "server/app.js",
  "dependencies": {
    "bench-rest": "^1.2.4",
    "body-parser": "1.18.2",
    "composable-middleware": "0.3.0",
    "compression": "1.7.2",
    "connect-mongo": "2.0.1",
    "cookie-parser": "1.4.3",
    "ejs": "2.5.7",
    "errorhandler": "1.5.0",
    "express": "4.16.3",
    "express-jwt": "5.3.1",
    "express-session": "1.15.6",
    "jsonwebtoken": "8.2.0",
    "lodash": "^4.17.11",
    "method-override": "2.3.10",
    "mongoose": "^5.5.5",
    "morgan": "^1.9.1",
    "serve-favicon": "2.4.5"
  },
  "devDependencies": {
    "@vue/cli-plugin-babel": "^3.0.0-beta.6",
    "@vue/cli-plugin-e2e-nightwatch": "^3.0.0-beta.6",
    "@vue/cli-plugin-eslint": "^3.0.0-beta.6",
    "@vue/cli-plugin-pwa": "^3.0.0-beta.6",
    "@vue/cli-plugin-unit-jest": "^3.0.0-beta.6",
    "@vue/cli-service": "^3.0.0-beta.6",
    "@vue/eslint-config-prettier": "^3.0.0-beta.6",
    "@vue/test-utils": "^1.0.0-beta.10",
    "axios": "^0.21.1",
    "axios-mock-adapter": "^1.15.0",
    "babel-core": "^7.0.0-0",
    "babel-jest": "^22.0.4",
    "blanket": "1.2.3",
    "chai": "^4.1.2",
    "fs-extra": "5.0.0",
    "grunt": "^1.0.4",
    "grunt-build-control": "0.7.1",
    "grunt-concurrent": "2.3.1",
    "grunt-contrib-clean": "1.1.0",
    "grunt-contrib-concat": "1.0.1",
    "grunt-contrib-copy": "1.0.0",
    "grunt-contrib-jshint": "1.1.0",
    "grunt-env": "0.4.4",
    "grunt-express-server": "0.5.4",
    "grunt-mocha-test": "0.13.3",
    "grunt-newer": "1.3.0",
    "grunt-nodemon": "0.4.2",
    "grunt-open": "^0.2.4",
    "grunt-rev": "0.1.0",
    "jasmine-reporters": "2.3.0",
    "jest-junit-reporter": "^1.1.0",
    "jit-grunt": "0.10.0",
    "jshint-jenkins-checkstyle-reporter": "0.1.2",
    "jshint-junit-reporter": "0.2.3",
    "jshint-stylish": "2.2.1",
    "mocha": "5.0.5",
    "mocha-cobertura-reporter": "1.0.4",
    "mocha-junit-reporter": "1.17.0",
    "mocha-lcov-reporter": "1.3.0",
    "node-sass": "^4.7.2",
    "npm-run-all": "^4.1.5",
    "nyc": "^11.6.0",
    "open": "0.0.5",
    "q": "1.5.1",
    "register-service-worker": "^1.0.0",
    "request": "2.85.0",
    "requirejs": "2.3.5",
    "sass-loader": "^6.0.6",
    "shelljs": "0.8.1",
    "should": "13.2.1",
    "sinon": "^4.5.0",
    "supertest": "3.0.0",
    "time-grunt": "1.4.0",
    "travis-cov": "0.2.5",
    "vue": "^2.5.13",
    "vue-checkbox-radio": "^0.6.0",
    "vue-material": "^1.0.0-beta-10.2",
    "vue-router": "^3.0.1",
    "vue-sortable": "^0.1.3",
    "vue-template-compiler": "^2.5.13",
    "vuex": "^3.0.1"
  },
  "engines": {
    "node": ">=8.0.0"
  },
  "scripts": {
    "serve": "vue-cli-service serve --open",
    "serve:all": "npm-run-all -p -r serve dev:server",
    "start": "node server/app.js",
    "stop:all": "killall node",
    "clean": "rm -rf reports package-contents* reports dist ",
    "build:client": "vue-cli-service build",
    "build:ci": "cp src/config/openshift.js src/config/index.js && npm run build:client && mkdir -p package-contents && cp -vr dist server Dockerfile package.json package-contents",
    "package": "zip -r package-contents.zip package-contents",
    "test:client": "vue-cli-service test",
    "test:server": "node_modules/.bin/nyc node_modules/.bin/mocha 'server/**/*.spec.js' --exit",
    "test:server:ci": "export MOCHA_FILE='reports/server/mocha/test-results.xml' && export NODE_ENV=ci && node_modules/.bin/nyc node_modules/.bin/mocha 'server/**/*.spec.js' -R mocha-junit-reporter --exit",
    "test:all": "npm run test:client && npm run test:server",
    "test:all:ci": "npm run test:client && npm run test:server:ci",
    "selenium": "nohup java -Dwebdriver.chrome.driver=\"$(pwd)/node_modules/chromedriver/lib/chromedriver/chromedriver\" -jar $(pwd)/node_modules/selenium-server/lib/runner/selenium-server-standalone-3.11.0.jar -port 8084 0<&- &>/dev/null &",
    "e2e": "export SELENIUM_PORT=443; export SELENIUM_SSL=1; export SELENIUM_HOST=$(oc get routes/$(oc get routes | grep 8084 | cut -d ' ' -f 1) --template='{{.spec.host}}') && export E2E_TEST_ROUTE=$(oc get routes/$(oc get routes | grep 8080 | cut -d ' ' -f 1)  --template='{{.spec.host}}') && echo \"testing app on https://${E2E_TEST_ROUTE} \n with selenium address ${SELENIUM_HOST}\" && vue-cli-service e2e --env jenkins --url https://${E2E_TEST_ROUTE}",
    "e2e:jenkins": "npm-run-all selenium e2e:ci",
    "e2e:ci": "vue-cli-service e2e --env jenkins --url http://${E2E_TEST_ROUTE}",
    "e2e:ide": "vue-cli-service e2e --url=http://localhost:8080 --env jenkins",
    "lint": "vue-cli-service lint",
    "lint:ci": "vue-cli-service lint --format checkstyle  > eslint-report.xml",
    "jshint": "./node_modules/.bin/grunt jshint",
    "jshint:ci": "./node_modules/.bin/grunt jshint:ci_server",
    "lint:all:ci": "npm run jshint:ci && npm run lint:ci",
    "dev:server": "./node_modules/.bin/grunt serve",
    "perf-test:create": "./node_modules/.bin/grunt perf-test:dev:create",
    "perf-test:show": "./node_modules/.bin/grunt perf-test:dev:show",
    "mongo": "docker run -i -d --name mongo-local -p 27017:27017 mongo",
    "mongo:drop": "npm run mongo:stop && docker rm mongo-local",
    "mongo:stop": "docker stop mongo-local",
    "mongo:start": "docker start mongo-local",
    "mongo:start-ide": "mongod --dbpath /projects/mongo",
    "mongo:stop-ide": "killall mongod",
    "prepare-nexus": "curl -X POST  -u admin:admin123 -H 'Content-Type: application/json' -H 'Accept: application/json' -d @nexus.json https://${NEXUS_SERVICE_HOST}:${NEXUS_SERVICE_PORT}/service/siesta/rest/v1/script && curl -X POST  -u admin:admin123 -H 'Content-Type: text/plain' -H 'Accept: application/json' https://${NEXUS_SERVICE_HOST}:${NEXUS_SERVICE_PORT}/service/siesta/rest/v1/script/zip/run",
    "publish": "curl -vvv -u admin:admin123 --upload-file package-contents.zip http://${NEXUS_SERVICE_HOST}:${NEXUS_SERVICE_PORT}/repository/zip/com/redhat/todolist/${JOB_NAME}.${BUILD_NUMBER}/package-contents.zip",
    "publish:get": "curl -vvv http://admin:admin123@${NEXUS_SERVICE_HOST}:${NEXUS_SERVICE_PORT}/repository/zip/com/redhat/todolist/${BUILD_TAG}/package-contents.zip -o package-contents.zip"
  },
  "private": true,
  "nyc": {
    "include": [
      "server/**/*.js"
    ],
    "exclude": [
      "server/**/*.spec.js"
    ],
    "ignore-class-method": "methodToIgnore",
    "reporter": [
      "html",
      "text",
      "cobertura"
    ],
    "report-dir": "./reports/coverage"
  },
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not ie <= 8"
  ]
}
